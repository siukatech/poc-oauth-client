
spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${client-id}
            client-secret: ${client-secret}
            authorization-grant-type: authorization_code
            scope: openid

        provider:
          keycloak:
            issuer-uri: ${oauth2.client.keycloak}/realms/${client-realm}
            jwk-set-uri: ${oauth2.client.keycloak}/realms/${client-realm}/protocol/openid-connect/certs
#            jws-algorithms: RS512
#            audiences:
            user-name-attribute: preferred_username

      resource-server:
        jwt:
          issuer-uri: ${oauth2.client.keycloak}/realms/${client-realm}
          jwk-set-uri: ${oauth2.client.keycloak}/realms/${client-realm}/protocol/openid-connect/certs
          audiences:
#            - "${client-id}2"
            - ${client-id}
        opaque-token:
          introspection-uri: ${oauth2.client.keycloak}/realms/${client-realm}/protocol/openid-connect/token/introspect
          client-id: ${client-id}
          client-secret: ${client-secret}
#        jwt:
#          keycloak:
#            issuer-uri: ${oauth2.client.keycloak}/realms/${client-realm}
#            jwk-set-uri: ${oauth2.client.keycloak}/realms/${client-realm}/protocol/openid-connect/certs
#            audiences: ${client-id}
#        opaque-token:
#          keycloak:
#            introspection-uri: ${oauth2.client.keycloak}/realms/${client-realm}/protocol/openid-connect/token/introspect
#            client-id: ${client-id}
#            client-secret: ${client-secret}

logging:
#  pattern:
#    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    org.springframework.web: TRACE
    com.siukatech.poc: TRACE
    com.siukatech.poc.oauthclient.security.config: DEBUG
    com.siukatech.poc.oauthclient.security.converter: DEBUG


keycloak:
  jwt:
    auth:
      converter: 1
      handler: 2
